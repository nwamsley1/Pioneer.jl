var documenterSearchIndex = {"docs":
[{"location":"development/ci_cd_workflow/#CI/CD-Workflow-Overview","page":"CI/CD Workflow Overview","title":"CI/CD Workflow Overview","text":"","category":"section"},{"location":"development/ci_cd_workflow/","page":"CI/CD Workflow Overview","title":"CI/CD Workflow Overview","text":"This document outlines the GitHub Actions workflows that power continuous integration and delivery for Pioneer.jl.","category":"page"},{"location":"development/ci_cd_workflow/#Workflows","page":"CI/CD Workflow Overview","title":"Workflows","text":"","category":"section"},{"location":"development/ci_cd_workflow/","page":"CI/CD Workflow Overview","title":"CI/CD Workflow Overview","text":"The repository uses several workflows:","category":"page"},{"location":"development/ci_cd_workflow/","page":"CI/CD Workflow Overview","title":"CI/CD Workflow Overview","text":"tests.yml – run the test suite on Ubuntu\ndocs.yml – build docs for pull requests, tags, and manual runs; deploy docs from main and v* tags\nbuild_app_linux.yml, build_app_macos.yml, build_app_windows.yml – build and package applications; reusable via workflow_call\nrelease.yml – orchestrate cross-platform builds and publish GitHub releases for tags\nCompatHelper.yml – update package compatibility constraints (scheduled daily)\nTagBot.yml – tag releases and interact with the Julia package registry\nregistrator.yml – run Registrator to open a registration PR in the Julia General registry","category":"page"},{"location":"development/ci_cd_workflow/#Event-Matrix","page":"CI/CD Workflow Overview","title":"Event Matrix","text":"","category":"section"},{"location":"development/ci_cd_workflow/","page":"CI/CD Workflow Overview","title":"CI/CD Workflow Overview","text":"Event Condition Tests Build Docs Deploy Docs Compile Release Purpose\npush (tag) v*.*.* :whitecheckmark: :whitecheckmark: :whitecheckmark: :whitecheckmark: :whitecheckmark: Release new version\npush main/develop :whitecheckmark: :whitecheckmark: if develop :whitecheckmark: :x: Merge or hotfix\npull request main/develop :whitecheckmark: :whitecheckmark: :x: :whitecheckmark: :x: Completed feature\npull request not main/develop :whitecheckmark: :whitecheckmark: :x: :x: :x: WIP feature\npush not main/develop :whitecheckmark: :whitecheckmark: :x: :x: :x: WIP feature","category":"page"},{"location":"development/ci_cd_workflow/#Manual-Workflow-Dispatches","page":"CI/CD Workflow Overview","title":"Manual Workflow Dispatches","text":"","category":"section"},{"location":"development/ci_cd_workflow/","page":"CI/CD Workflow Overview","title":"CI/CD Workflow Overview","text":"Manual dispatches allow running workflows on demand.","category":"page"},{"location":"development/ci_cd_workflow/","page":"CI/CD Workflow Overview","title":"CI/CD Workflow Overview","text":"Workflow Condition Tests Build Docs Deploy Docs Compile Release Purpose\nregistrator.yml Julia registration success :whitecheckmark: :whitecheckmark: :whitecheckmark: :whitecheckmark: :whitecheckmark: Release new version\nrelease.yml v*.*.* :whitecheckmark: :whitecheckmark: :whitecheckmark: :whitecheckmark: :whitecheckmark: GitHub release\ntests.yml, docs.yml, build_app_* v*.*.* :whitecheckmark: :whitecheckmark: :whitecheckmark: :whitecheckmark: :x: Manually rerun or troubleshoot\ntests.yml, docs.yml, build_app_* no tag :whitecheckmark: :whitecheckmark: develop :whitecheckmark: :x: Test/build dev version","category":"page"},{"location":"development/ci_cd_workflow/#Release-Process","page":"CI/CD Workflow Overview","title":"Release Process","text":"","category":"section"},{"location":"development/ci_cd_workflow/","page":"CI/CD Workflow Overview","title":"CI/CD Workflow Overview","text":"To cut a new release:","category":"page"},{"location":"development/ci_cd_workflow/","page":"CI/CD Workflow Overview","title":"CI/CD Workflow Overview","text":"Update the version number in Project.toml.\nMerge that change into the main branch.\nManually trigger registrator.yml, which runs JuliaRegistries/Registrator@v1 to open or update a registration pull request in the Julia General registry.\nAfter the registry PR is merged, TagBot creates a tag and GitHub release.\nThe tag triggers the docs workflow to build and deploy versioned documentation and the release.yml workflow. The release workflow calls the platform build workflows (build_app_linux.yml, build_app_macos.yml, build_app_windows.yml) to compile the application and attach the artifacts to the GitHub release.","category":"page"},{"location":"development/ci_cd_workflow/#Pre-releases","page":"CI/CD Workflow Overview","title":"Pre-releases","text":"","category":"section"},{"location":"development/ci_cd_workflow/","page":"CI/CD Workflow Overview","title":"CI/CD Workflow Overview","text":"Tags containing a hyphen (e.g., v1.2.0-rc1) are treated as pre-releases.\nTagBot marks such tags as GitHub prereleases.\nBuild workflows still run, and packaging steps strip pre-release/build metadata when generating Windows installers.","category":"page"},{"location":"development/ci_cd_workflow/#Additional-Notes","page":"CI/CD Workflow Overview","title":"Additional Notes","text":"","category":"section"},{"location":"development/ci_cd_workflow/","page":"CI/CD Workflow Overview","title":"CI/CD Workflow Overview","text":"The docs workflow builds documentation for all pull requests, tags, and manual runs, but only deploys to gh-pages when invoked on main, develop, or a v* tag.\nTag-based releases (v*.*.*) trigger tests, docs, builds, publishing of GitHub releases, and versioned documentation.\nCompatHelper runs nightly to propose dependency updates; TagBot publishes tags to the Julia General registry.\nDocumentation is published for stable, semantic version tags (v#.#.#), and dev.","category":"page"},{"location":"api/core/#api-reference","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"user_guide/parameters/#Parameter-Configuration","page":"Parameter Configuration","title":"Parameter Configuration","text":"","category":"section"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"Pioneer.jl uses JSON configuration files to control analysis. This guide explains the parameters for both SearchDIA and BuildSpecLib functions.","category":"page"},{"location":"user_guide/parameters/#SearchDIA-Configuration","page":"Parameter Configuration","title":"SearchDIA Configuration","text":"","category":"section"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"Pioneer.jl uses JSON configuration files to control analysis. This guide explains the parameters for both SearchDIA and BuildSpecLib functions.","category":"page"},{"location":"user_guide/parameters/#SearchDIA-Configuration-2","page":"Parameter Configuration","title":"SearchDIA Configuration","text":"","category":"section"},{"location":"user_guide/parameters/#Frequently-Modified-Parameters","page":"Parameter Configuration","title":"Frequently Modified Parameters","text":"","category":"section"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"Most parameters should not be changed, but the following may need adjustement. ","category":"page"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"first_search.fragment_settings.min_score: The minimum score determines which fragments must match in the fragment-index search in order for the precursor to pass. Each precursor is awarded a score based on which fragments match the spectrum. The score assigned to each fragment depends on its intensity rank. The default scheme is 8,4,4,2,2,1,1. That is, if the 1st, 3rd, and 7th ranking fragments matched the spectrum, the precursor would be awarded a score of 8+4+1=13. If all 7 of the fragments matched, the precursor would be awarded a score of 22. For normal instrument settings on an Orbitrap or Astral mass analyzer, the mass tolerance is about +/- 5-15 ppm and 15 is a reasonable default score threshold. However, for instruments with less mass accuracy (Sciex ZenoTOF 7600 or different Orbitrap scan settings), the score threshold may need to be set higher, perhaps to 20. It may be worthwile to test different values when searching data from a new instrument or sample type. In order to pass the first search, a precursor need only pass the threshold and score sufficiently well in at least one of the MS data files.\nfirst_search.fragment_settings.max_rank: Search against only the n'th most abundant fragment for each precursor. Including more fragments can improve performance but increase memory consumption, and the search could take longer. From experience, there are diminishing returns after 25-50 fragments. \nquant_search.fragment_settings.max_rank: See above \nquant_search.fragment_settings.n_isotopes: If searching with non-Altimeter libraries (not recommended), such as Prosit or UniSpec, this should be set to 1 as the second fragment isotopes will not be calculated accurately.\nacquisition.nce: This is the initial guess for the normalized collision energy that will best align the Altimeter Library with the empirical data. Altimeter values should agree with those from Thermo Instruments manufactured in Bremen Germany. If upon inspection of the quality control plots the initial guess is far from the estimated value, it might be possible to improve search results slightly by re-searching with a better initial guess.\nacquisition.quad_transmission.fit_from_data: Estimate the quad transmission function from the data. Otherwise defaults to symmetric, smooth function. \noptimization.machine_learning.max_samples: This is the maximum number of PSMs to use for training the EvoTrees/XGBoost model. These PSMs need to comfortably fit in memory in addition to the spectral library. As a rule of thumb, 7M rows is about 1GB. At the default maximum of 50M rows, the PSMs table will consume 7GB of memory.\nDuring EvoTrees/XGBoost training, any missing feature values are replaced with the column median. If a column is entirely missing, the values are filled with zero of the appropriate type.\nglobal.isotope_settings.combine_traces: Some precursors may be split accross different acquisition windows. Pioneer refers to these as seperate isotope traces. When set to true, Pioneer does not distinguish between a precursor's isotope traces. They are combined for scoring and quantitation. With a clever acquisition scheme this can increase the number of data points accross chromatographic peaks. This is recomended only for acquisition windows 2-4 m/z. It should also be combined with aquisition.quad_transmission.fit_from_data = true. ","category":"page"},{"location":"user_guide/parameters/#Global-Parameters","page":"Parameter Configuration","title":"Global Parameters","text":"","category":"section"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"Parameter Type Description\nisotope_settings.err_bounds_first_pass [Int, Int] Precursor monoisotope may lie NEUTRON/charge Thompsons (left, right) outside the quadrupole isolation window (default: [1, 0])\nisotope_settings.err_bounds_second_pass [Int, Int] Precursor monoisotope may lie NEUTRON/charge Thompsons (left, right) outside the quadrupole isolation window (default: [3, 1])\nisotope_settings.combine_traces Boolean Whether to combine precursor isotope traces in quantification. Experimental, so set to false (default: false)\nisotope_settings.partial_capture Boolean Whether to estimate the conditional fragment isotope distribution (true) or assume complete transmission the entire precursor isotopic envelope (default: true)\nisotope_settings.min_fraction_transmitted Float Minimum fraction of the precursor isotope distribution that must be isolated for scoring and quantitation (default: 0.25)\nscoring.q_value_threshold Float Global q-value threshold for filtering results. Also controls false transfer rate of MBR (default: 0.01)\nnormalization.n_rt_bins Int Number of retention time bins for quant normalization (default: 100)\nnormalization.spline_n_knots Int Number of knots in quant normalization spline (default: 7)\nmatch_between_runs Boolean Whether to attempt to transfer peptide identifications across runs. Turning this on will add additional features to the EvoTrees/XGBoost model (default: true)","category":"page"},{"location":"user_guide/parameters/#Parameter-Tuning-Settings","page":"Parameter Configuration","title":"Parameter Tuning Settings","text":"","category":"section"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"Parameter Type Description\nfragment_settings.min_count Int Minimum number of matching fragment ions (default: 7)\nfragment_settings.max_rank Int Maximum rank of fragments to consider (default: 25, means 26th-last most abundant fragments per precursor are filtered out)\nfragment_settings.tol_ppm Float Initial tragment mass tolerance guess in parts per million (default: 20.0, should be set lower for some TOF instruments)\nfragment_settings.min_score Int Minimum fragment-index score threshold for fragment matches (default: 22)\nfragment_settings.min_spectral_contrast Float Minimum cosine simmilarity score (default: 0.9)\nfragment_settings.relative_improvement_threshold Float Minimum relative Scribe score improvement needed to ignore an interferring peak (default: 1.25)\nfragment_settings.min_log2_ratio Float Minimum log2 ratio of matched library fragment intensities to unmatched library fragment intensities (default: 1.5)\nfragment_settings.min_top_n [Int, Int] Minimum number of top N matches - [requirement, denominator]. Default: [3, 3]\nfragment_settings.n_isotopes Int Number of fragment isotopes to consider in matching (default: 1, mono only)\nsearch_settings.sample_rate Float Fraction of spectra to sample during parameter tuning (default: 0.02)\nsearch_settings.min_samples Int Minimum number of samples required for tuning (default: 3500)\nsearch_settings.min_quad_tuning_psms Int Minimum number of psms required for estimating quad transmission (default: 5000)\nsearch_settings.min_quad_tuning_fragments Int Must match at least n fragments to each quad tuning psm (default: 3)\nsearch_settings.max_presearch_iters Int Maximum number of parameter tuning iterations (default: 10)\nsearch_settings.frag_err_quantile Float Quantile for fragment error estimation (default: 0.01)","category":"page"},{"location":"user_guide/parameters/#First-Search-Parameters","page":"Parameter Configuration","title":"First Search Parameters","text":"","category":"section"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"Parameter Type Description\nfragment_settings.min_count Int Minimum number of matching fragments (default: 4)\nfragment_settings.max_rank Int Maximum fragment rank to consider (default: 50 means 50th-last most abundant fragments per precursor are filtered out)\nfragment_settings.min_score Int Minimum score for fragment matches (default: 15)\nfragment_settings.min_spectral_contrast Float Minimum cosine simmilarity required (default: 0.5)\nfragment_settings.relative_improvement_threshold Float Minimum relative Scribe score improvement needed to ignore an interferring peak (default: 1.25)\nfragment_settings.min_log2_ratio Float Minimum log2 ratio of matched library fragment intensities to unmatched library fragment intensities (default: 0.0, means sum of matched library fragment intensities is equal to the sum of unmatched library fragment intensities for the precursor )\nfragment_settings.min_top_n [Int, Int] Minimum top N matches - [requirement, denominator]. Default: [2, 3]\nfragment_settings.n_isotopes Int Number of isotopes to consider (default: 1)\nscoring_settings.n_train_rounds Int Number of training rounds for scoring model (default: 2)\nscoring_settings.max_iterations Int Maximum iterations for scoring optimization (default: 20)\nscoring_settings.max_q_value_probit_rescore Float Maximum q-value threshold for semi-supervised learning durning probit regression (default: 0.05)\nscoring_settings.max_PEP Int Maximum local FDR threshold for passing the first search (default: 0.9)\nirt_mapping.max_prob_to_impute_irt Int If probability of the psm is less then x in the first-pass search, then impute irt for the precursor with globably determined value from the other runs (default: 0.75)\nirt_mapping.fwhm_nstd Float Number of standard deviations of the fwhm to add to the retention time tolerance (default: 4)\nirt_mapping.irt_nstd Int Number of standard deviations of run-to-run irt tolerance to add to the retention time tolerance (default: 4)","category":"page"},{"location":"user_guide/parameters/#Quantification-Search-Parameters","page":"Parameter Configuration","title":"Quantification Search Parameters","text":"","category":"section"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"Parameter Type Description\nfragment_settings.min_count Int Minimum fragment count for quantification (default: 3)\nfragment_settings.min_y_count Int Minimum number of y-ions required (default: 2)\nfragment_settings.max_rank Int Maximum fragment rank (default: 255)\nfragment_settings.min_spectral_contrast Float Minimum spectral contrast score (default: 0.0)\nfragment_settings.min_log2_ratio Float Minimum log2 ratio of intensities (default: -1.7)\nfragment_settings.min_top_n [Int, Int] Minimum top N matches - [requirement, denominator]. Default: [2, 3]\nfragment_settings.n_isotopes Int Number of isotopes for quantification (default: 2, include the M1 and M2 isotopes)\nchromatogram.smoothing_strength Float Strength of chromatogram smoothing (default: 1e-6)\nchromatogram.padding Int Number of zeros to pad chromatograms on either side (default: 0)\nchromatogram.max_apex_offset Int Maximum allowed apex offset in #scans where the precursor could have been detected between the second-pass search and re-integration with 1 percent FDR precursors (default: 2)","category":"page"},{"location":"user_guide/parameters/#Acquisition-Parameters","page":"Parameter Configuration","title":"Acquisition Parameters","text":"","category":"section"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"Parameter Type Description\nnce Int Normalized collision energy initial guess (used in pre-search before NCE tuning) (default: 25)\nquad_transmission.fit_from_data Boolean Whether to fit quadrupole transmission from data (default: false)\nquad_transmission.overhang Float deprecated (default: 0.25)\nquad_transmission.smoothness Float Smoothness parameter for transmission curve. Higher value means more \"box-like\" shape. (default: 5.0)","category":"page"},{"location":"user_guide/parameters/#RT-Alignment-Parameters","page":"Parameter Configuration","title":"RT Alignment Parameters","text":"","category":"section"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"Parameter Type Description\nsigma_tolerance Int Number of standard deviations for irt tolerance after pre-search (default: 4)\nmin_probability Float Minimum probability for alignment psms in pre-search (default: 0.95)","category":"page"},{"location":"user_guide/parameters/#Optimization-Parameters","page":"Parameter Configuration","title":"Optimization Parameters","text":"","category":"section"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"Parameter Type Description\ndeconvolution.lambda Float L2 regularization parameter for deconvolution (default: 0.0 for NoNorm regularization)\ndeconvolution.reg_type String Regularization type: \"none\" (NoNorm), \"l1\" (L1Norm), or \"l2\" (L2Norm) (default: \"none\")\ndeconvolution.huber_delta Float Delta parameter for Huber loss function (default: 300)\ndeconvolution.huber_exp Float Exponent for Huber delta progression (default: 1.5)\ndeconvolution.huber_iters Int Number of Huber outer iterations (default: 15)\ndeconvolution.newton_iters Int Maximum Newton iterations per outer iteration (recommended: 25, default: 50)\ndeconvolution.bisection_iters Int Maximum bisection iterations when Newton fails (recommended: 100, default: 100)\ndeconvolution.outer_iters Int Maximum outer iterations for convergence (recommended: max(1000, n_variables*5), default: 1000)\ndeconvolution.newton_accuracy Float Absolute convergence threshold for Newton method (default: 10)\ndeconvolution.bisection_accuracy Float Absolute convergence threshold for bisection method (default: 10)\ndeconvolution.max_diff Float Relative convergence threshold - maximum relative change in weights between iterations. Also used as relative tolerance for Newton's method (default: 0.01)\nmachine_learning.max_samples Int Maximum number of samples for EvoTrees/XGBoost training (default: 5000000)\nmachine_learning.min_trace_prob Float Minimum trace probability threshold (default: 0.75)\nmachine_learning.max_q_value_xgboost_mbr_rescore Float q-value threshold for match-between-runs candidates during semi-supervised learning with EvoTrees/XGBoost (default: 0.20)\nmachine_learning.min_PEP_neg_threshold_xgboost_rescore Float Minimum posterior error probabilility threshold for poor scoring targets to be relabeled as negative examples during semi-supervised learning with EvoTrees/XGBoost (default: 0.20)\nmachine_learning.spline_points Int Number of points for probability spline (default: 500)\nmachine_learning.interpolation_points Int Number of interpolation points (default: 10)","category":"page"},{"location":"user_guide/parameters/#Protein-Inference-Parameters","page":"Parameter Configuration","title":"Protein Inference Parameters","text":"","category":"section"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"Parameter Type Description\nmin_peptides Int Minimum number of peptides required for a protein group (default: 1)","category":"page"},{"location":"user_guide/parameters/#MaxLFQ-Parameters","page":"Parameter Configuration","title":"MaxLFQ Parameters","text":"","category":"section"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"Parameter Type Description\nrun_to_run_normalization Boolean Whether to use run-to-run normalized abundances for precursor and protein quantification (default: true)","category":"page"},{"location":"user_guide/parameters/#Output-Parameters","page":"Parameter Configuration","title":"Output Parameters","text":"","category":"section"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"Parameter Type Description\nwrite_csv Boolean Whether to write results to CSV\nwrite_decoys Boolean Where to quantify and include decoys in the output files\ndelete_temp Boolean Whether to delete temporary files\nplots_per_page Int Number of plots per page in reports (default: 12)","category":"page"},{"location":"user_guide/parameters/#Path-Parameters","page":"Parameter Configuration","title":"Path Parameters","text":"","category":"section"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"Parameter Type Description\nlibrary String Path to spectral library file\nms_data String Path to mass spectrometry data directory\nresults String Path to output results directory","category":"page"},{"location":"user_guide/parameters/#BuildSpecLib-Configuration","page":"Parameter Configuration","title":"BuildSpecLib Configuration","text":"","category":"section"},{"location":"user_guide/parameters/#FASTA-Input-and-Regex-Mapping","page":"Parameter Configuration","title":"FASTA Input and Regex Mapping","text":"","category":"section"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"Pioneer.jl now supports flexible FASTA input through GetBuildLibParams:","category":"page"},{"location":"user_guide/parameters/#Input-Options","page":"Parameter Configuration","title":"Input Options","text":"","category":"section"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"Single directory: Scans for all .fasta and .fasta.gz files\nSingle file: Directly uses the specified FASTA file\nMixed array: Any combination of directories and files","category":"page"},{"location":"user_guide/parameters/#Regex-Code-Mapping","page":"Parameter Configuration","title":"Regex Code Mapping","text":"","category":"section"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"The regex patterns for parsing FASTA headers can be configured in three ways:","category":"page"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"Single regex set for all files (default):\nGetBuildLibParams(out_dir, lib_name, [dir1, dir2, file1])\n# All FASTA files use the same default regex patterns\nCustom single regex set:\nGetBuildLibParams(out_dir, lib_name, [dir1, file1],\n    regex_codes = Dict(\n        \"accessions\" => \"^>(\\\\S+)\",\n        \"genes\" => \"GN=(\\\\S+)\",\n        \"proteins\" => \"\\\\s+(.+?)\\\\s+OS=\",\n        \"organisms\" => \"OS=(.+?)\\\\s+GN=\"\n    ))\n# All files use these custom patterns\nPositional mapping (one regex set per input):\nGetBuildLibParams(out_dir, lib_name, [uniprot_dir, custom_file],\n    regex_codes = [\n        Dict(\"accessions\" => \"^\\\\w+\\\\|(\\\\w+)\\\\|\", ...),  # For uniprot_dir files\n        Dict(\"accessions\" => \"^>(\\\\S+)\", ...)             # For custom_file\n    ])","category":"page"},{"location":"user_guide/parameters/#FASTA-Digest-Parameters","page":"Parameter Configuration","title":"FASTA Digest Parameters","text":"","category":"section"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"Parameter Type Description\nmin_length Int Minimum peptide length (default: 7)\nmax_length Int Maximum peptide length (default: 30)\nmin_charge Int Minimum charge state (default: 2)\nmax_charge Int Maximum charge state (default: 4)\ncleavage_regex String Regular expression for cleavage sites (default: \"[KR][^_|$]\", to exclude cleavage after proline: \"[KR][^P\nmissed_cleavages Int Maximum allowed missed cleavages (default: 1)\nmax_var_mods Int Maximum variable modifications per peptide (default: 1)\nadd_decoys Boolean Generate decoy sequences (default: true)\nentrapment_r Float Ratio of entrapment sequences (default: 0)\nfasta_header_regex_accessions [String] Regex with a capture group for the accession, one per FASTA file\nfasta_header_regex_genes [String] Regex with a capture group for the gene name, one per FASTA file\nfasta_header_regex_proteins [String] Regex with a capture group for the protein name, one per FASTA file\nfasta_header_regex_organisms [String] Regex with a capture group for the organism, one per FASTA file","category":"page"},{"location":"user_guide/parameters/#NCE-Parameters","page":"Parameter Configuration","title":"NCE Parameters","text":"","category":"section"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"Parameter Type Description\nnce Float Base normalized collision energy (default: 25.0)\ndefault_charge Int Default charge state for NCE calculations (default: 2)\ndynamic_nce Boolean Use charge-dependent NCE adjustments (default: true)","category":"page"},{"location":"user_guide/parameters/#Library-Parameters","page":"Parameter Configuration","title":"Library Parameters","text":"","category":"section"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"Parameter Type Description\nrt_bin_tol Float Retention time binning tolerance in minutes (default: 1.0)\nfrag_bin_tol_ppm Float Fragment mass tolerance in PPM (default: 10.0)\nrank_to_score [Int] Intensity multipliers for ranked peaks (default: [8,4,4,2,2,1,1])\ny_start_index Int Starting index for y-ion annotation (default: 4)\nb_start_index Int Starting index for b-ion annotation (default: 3)\ny_start Int Minimum y-ion to consider (default: 3)\nb_start Int Minimum b-ion to consider (default: 2)\ninclude_p_index Boolean Include proline-containing index fragments (default: false)\ninclude_p Boolean Include proline-containing fragments (default: false)\nauto_detect_frag_bounds Boolean Auto-detect fragment mass bounds (default: true)\ncalibration_raw_file String Path to calibration raw file\nfrag_mz_min Float Minimum fragment m/z (default: 150.0)\nfrag_mz_max Float Maximum fragment m/z (default: 2020.0)\nprec_mz_min Float Minimum precursor m/z (default: 390.0)\nprec_mz_max Float Maximum precursor m/z (default: 1010.0)\nmax_frag_charge Int Maximum fragment ion charge (default: 3)\nmax_frag_rank Int Maximum fragment rank (default: 50)\nmin_frag_intensity Float Minimum relative fragment intensity (default: 0.00)\ninclude_isotope Boolean Include isotope peak annotations (default: false)\ninclude_internal Boolean Include internal fragment annotations (default: false)\ninclude_immonium Boolean Include immonium ion annotations (default: false)\ninclude_neutral_diff Boolean Include neutral loss annotations (default: true)\ninstrument_type String Instrument type for predictions (default: \"NONE\")\nprediction_model String Model for fragment predictions (default: \"altimeter\")","category":"page"},{"location":"user_guide/parameters/#Modification-Parameters","page":"Parameter Configuration","title":"Modification Parameters","text":"","category":"section"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"Parameter Type Description\nvariable_mods.pattern [String] Amino acids to modify (default: [\"M\"])\nvariable_mods.mass [Float] Modification masses (default: [15.99491])\nvariable_mods.name [String] Modification identifiers (default: [\"Unimod:35\"])\nfixed_mods.pattern [String] Amino acids to modify (default: [\"C\"])\nfixed_mods.mass [Float] Modification masses (default: [57.021464])\nfixed_mods.name [String] Modification identifiers (default: [\"Unimod:4\"])","category":"page"},{"location":"user_guide/parameters/#Processing-Parameters","page":"Parameter Configuration","title":"Processing Parameters","text":"","category":"section"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"Parameter Type Description\nmax_koina_requests Int Maximum concurrent Prosit API requests (default: 24)\nmax_koina_batch Int Maximum batch size for API requests (default: 1000)\nmatch_lib_build_batch Int Batch size for library building (default: 100000)","category":"page"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"note: Koina API Retry Behavior\nAs of version 0.1.13, Koina API retry warnings are now logged at debug level 2 instead of being shown to users by default. To see retry attempts during debugging, set debug_console_level: 2 in your SearchDIA parameters. The library build will only fail if all retry attempts are exhausted.","category":"page"},{"location":"user_guide/parameters/#Path-Parameters-2","page":"Parameter Configuration","title":"Path Parameters","text":"","category":"section"},{"location":"user_guide/parameters/","page":"Parameter Configuration","title":"Parameter Configuration","text":"Parameter Type Description\nfasta_paths [String] List of FASTA file paths\nfasta_names [String] Names for each FASTA file\ninclude_contaminants Boolean Append a contaminants FASTA to the build (default: true)\nout_dir String Output directory path\nlib_name String Base name for library files\nnew_lib_name String Name for updated library files\nout_name String Output filename\npredict_fragments Boolean Predict fragment intensities (default: true)","category":"page"},{"location":"user_guide/installation/#Installation-Guide","page":"Installation Guide","title":"Installation Guide","text":"","category":"section"},{"location":"user_guide/installation/#System-Requirements","page":"Installation Guide","title":"System Requirements","text":"","category":"section"},{"location":"user_guide/installation/","page":"Installation Guide","title":"Installation Guide","text":"Julia: 1.10 or higher\nCPU: Multiple cores and threads recommended. Increasing the number of threads reduces computation time.\nRAM: >=16GB recommended. RAM availability should exceed the spectral library size by at least 4GB. For searching against the yeast proteome, as little as 6-8 GB may suffice.  \nStorage: SSD recommended. Available disk space at least double the total size of the .arrow formmated raw files to search. The .arrow files are usually ~1/2 the size of the vendor files. \nOperating System: Windows, Linux, or macOS","category":"page"},{"location":"user_guide/installation/#Installation","page":"Installation Guide","title":"Installation","text":"","category":"section"},{"location":"user_guide/installation/#End-User-Installation","page":"Installation Guide","title":"End-User Installation","text":"","category":"section"},{"location":"user_guide/installation/","page":"Installation Guide","title":"Installation Guide","text":"Download the installer for your operating system from the releases page.\nRun the installer. It places a pioneer executable on your PATH.\nOn first launch:\nmacOS – Gatekeeper verifies the binary and the first run can take about a minute. Zipped binaries require manual Gatekeeper approval and are not recommended.\nVerify the installation:\npioneer --help","category":"page"},{"location":"user_guide/installation/#Docker","page":"Installation Guide","title":"Docker","text":"","category":"section"},{"location":"user_guide/installation/","page":"Installation Guide","title":"Installation Guide","text":"Run Pioneer in a container without installing dependencies.","category":"page"},{"location":"user_guide/installation/","page":"Installation Guide","title":"Installation Guide","text":"Pull the prebuilt image:\ndocker pull dennisgoldfarb/pioneer:latest\nExecute Pioneer inside the container, mounting a host directory (e.g. the current directory) to access data:\ndocker run --rm -it -v $(pwd):/work dennisgoldfarb/pioneer:latest pioneer --help\nReplace pioneer --help with any subcommand.\nTo build the image locally using the included Dockerfile:\ndocker build -t pioneer .","category":"page"},{"location":"user_guide/installation/#Development-Setup","page":"Installation Guide","title":"Development Setup","text":"","category":"section"},{"location":"user_guide/installation/","page":"Installation Guide","title":"Installation Guide","text":"To work on Pioneer itself, set up a local development environment.","category":"page"},{"location":"user_guide/installation/","page":"Installation Guide","title":"Installation Guide","text":"Install Julia 1.10 or higher from julia.org.\nClone the repository:\ngit clone https://github.com/nwamsley1/Pioneer.jl.git\ncd Pioneer.jl\nStart Julia in the development environment and activate the project:\njulia --project=dev\npkg> develop ./\nIn the Julia REPL load Revise and Pioneer:\njulia> using Revise, Pioneer\nInstall PioneerConverter to convert Thermo RAW files to Arrow format.\nCall the main functions directly, e.g.\n# Option 1: Single FASTA directory (backward compatible)\nparams = GetBuildLibParams(out_dir, lib_name, fasta_dir)\nBuildSpecLib(params)\n\n# Option 2: Flexible input - files and/or directories\nparams = GetBuildLibParams(out_dir, lib_name, \n    [\"/path/to/dir1\", \"/path/to/file.fasta\", \"/path/to/dir2\"])\nBuildSpecLib(params)\nparams = GetSearchParams(\"library.poin\", \"ms_data\", \"results\")\nSearchDIA(params)","category":"page"},{"location":"user_guide/installation/","page":"Installation Guide","title":"Installation Guide","text":"Subcommand Julia function\nparams-predict GetBuildLibParams\npredict BuildSpecLib\nparams-search GetSearchParams\nsearch SearchDIA\nconvert-raw PioneerConverter\nconvert-mzml convertMzML","category":"page"},{"location":"user_guide/installation/","page":"Installation Guide","title":"Installation Guide","text":"note: 'note'\nRevise enables hot reloading of code during development.","category":"page"},{"location":"user_guide/installation/#PioneerConverter","page":"Installation Guide","title":"PioneerConverter","text":"","category":"section"},{"location":"user_guide/installation/","page":"Installation Guide","title":"Installation Guide","text":"Detailed installation and usage instructions for PioneerConverter are available in its documentation.","category":"page"},{"location":"user_guide/installation/#Next-Steps","page":"Installation Guide","title":"Next Steps","text":"","category":"section"},{"location":"user_guide/installation/","page":"Installation Guide","title":"Installation Guide","text":"After installation:","category":"page"},{"location":"user_guide/installation/","page":"Installation Guide","title":"Installation Guide","text":"Follow the Quick Start Tutorial.\nGenerate parameter files with pioneer params-predict or pioneer params-search, then edit them according to Parameter Configuration.","category":"page"},{"location":"advanced/performance/#Performance-Tuning","page":"Performance Tuning","title":"Performance Tuning","text":"","category":"section"},{"location":"user_guide/quickstart/#Quick-Start-Tutorial","page":"Quick Start Tutorial","title":"Quick Start Tutorial","text":"","category":"section"},{"location":"user_guide/quickstart/#Basic-Workflow","page":"Quick Start Tutorial","title":"Basic Workflow","text":"","category":"section"},{"location":"user_guide/quickstart/","page":"Quick Start Tutorial","title":"Quick Start Tutorial","text":"Pioneer performs three major steps:","category":"page"},{"location":"user_guide/quickstart/","page":"Quick Start Tutorial","title":"Quick Start Tutorial","text":"Convert vendor MS files into the Arrow format using PioneerConverter.\nBuild in silico spectral libraries using FASTA files and the Koina server.\nSearch DIA experiments using a spectral library and the MS data files.","category":"page"},{"location":"user_guide/quickstart/#Pioneer-Converter","page":"Quick Start Tutorial","title":"Pioneer Converter","text":"","category":"section"},{"location":"user_guide/quickstart/","page":"Quick Start Tutorial","title":"Quick Start Tutorial","text":"Pioneer operates on MS/MS data stored in the Apache Arrow IPC format. Use the bundled PioneerConverter via the CLI to convert Thermo RAW files:","category":"page"},{"location":"user_guide/quickstart/","page":"Quick Start Tutorial","title":"Quick Start Tutorial","text":"pioneer convert-raw /path/to/raw/or/folder","category":"page"},{"location":"user_guide/quickstart/","page":"Quick Start Tutorial","title":"Quick Start Tutorial","text":"This subcommand accepts either a single .raw file or a directory of files. See the PioneerConverter repository for additional options such as thread count and output paths.","category":"page"},{"location":"user_guide/quickstart/#MzML-to-Arrow-IPC-(Sciex)","page":"Quick Start Tutorial","title":"MzML to Arrow IPC (Sciex)","text":"","category":"section"},{"location":"user_guide/quickstart/","page":"Quick Start Tutorial","title":"Quick Start Tutorial","text":"For mzML-formatted data, use:","category":"page"},{"location":"user_guide/quickstart/","page":"Quick Start Tutorial","title":"Quick Start Tutorial","text":"pioneer convert-mzml /path/to/mzml/or/folder","category":"page"},{"location":"user_guide/quickstart/#Starting-Pioneer","page":"Quick Start Tutorial","title":"Starting Pioneer","text":"","category":"section"},{"location":"user_guide/quickstart/","page":"Quick Start Tutorial","title":"Quick Start Tutorial","text":"After installation, Pioneer is accessed from the command line. Running pioneer --help displays available subcommands:","category":"page"},{"location":"user_guide/quickstart/","page":"Quick Start Tutorial","title":"Quick Start Tutorial","text":"pioneer [options] <subcommand> [subcommand-args...]","category":"page"},{"location":"user_guide/quickstart/","page":"Quick Start Tutorial","title":"Quick Start Tutorial","text":"Subcommands include search, predict, params-search, params-predict, convert-raw, and convert-mzml. On the first launch macOS performs a one-time Gatekeeper check.","category":"page"},{"location":"user_guide/quickstart/","page":"Quick Start Tutorial","title":"Quick Start Tutorial","text":"A minimal end-to-end workflow is:","category":"page"},{"location":"user_guide/quickstart/","page":"Quick Start Tutorial","title":"Quick Start Tutorial","text":"# Traditional approach with single FASTA directory\npioneer params-predict lib_dir lib_name fasta_dir --params-path=predict_params.json\n\n# Or with new flexible FASTA input (mixing directories and files)\n# Note: CLI support for mixed inputs requires editing the JSON parameter file\npioneer params-predict lib_dir lib_name fasta_dir --params-path=predict_params.json\n# Then edit predict_params.json to set fasta_paths to include specific files\n\npioneer predict predict_params.json\npioneer convert-raw raw_dir\npioneer params-search library.poin ms_data_dir results_dir --params-path=search_params.json\npioneer search search_params.json","category":"page"},{"location":"user_guide/quickstart/","page":"Quick Start Tutorial","title":"Quick Start Tutorial","text":"This sequence builds a predicted spectral library, converts vendor files to Arrow, generates search parameters, and searches the experiment.","category":"page"},{"location":"user_guide/quickstart/","page":"Quick Start Tutorial","title":"Quick Start Tutorial","text":"tip: Advanced FASTA Input\nWhen using the Julia API directly, you can specify mixed FASTA sources:params = GetBuildLibParams(out_dir, lib_name, \n    [\"/path/to/uniprot/\", \"/custom/proteins.fasta\"])","category":"page"},{"location":"user_guide/quickstart/","page":"Quick Start Tutorial","title":"Quick Start Tutorial","text":"params-predict and params-search create template JSON files. Edit these configurations to suit your experiment before running predict or search. See Parameter Configuration for a description of each option.","category":"page"},{"location":"advanced/algorithms/#algorithm-documentation","page":"Algorithm Documentation","title":"Algorithm Documentation","text":"","category":"section"},{"location":"#Introduction","page":"Home","title":"Introduction","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pioneer and its companion tool Altimeter are an open-source and performant solution for analysis of protein MS data acquired by data-independent acquisition (DIA). Poineer includes routines for searching DIA experments from Thermo and Sciex instruments and for building spectral libraries using the Koina interface. Given a spectral library of precursor fragment ion intensities and retention time estimates, Pioneer identifies and quantifies peptides from the library in the data. ","category":"page"},{"location":"#Design-Goals","page":"Home","title":"Design Goals","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Open-Source: Pioneer is completely open source. \nCross-Platform: Pioneer and the vendor-specific file conversion tool run on Linux, MacOS, and Windows\nHigh-Performance: Pioneer achieves high sensitivity, FDR control, quantitative precision and accuracy on benhcmark datat-sets \nScalability: Memory consumption and speed should remain constant as the number of raw files in an anslysis grows. Pioneer should scale to very large experiments with hundreds to thousands of raw files (experimental)\nFast: Pioneer searches data several times faster than it can be aquired and faster than state-of-the-art search tools.","category":"page"},{"location":"#Features","page":"Home","title":"Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pioneer and Altimeter build on previous search engines and introduce several new concepts:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Spectral Library Prediction with Koina: Using Koina Pioneer can construct fully predicted spectral libraries given an internet connection and a FASTA file with protein sequences. Pioneer uses Chronologer to predict peptide retention times and is optimized to use Altimeter for fragment ion intensity predictions.\nCollision Energy Independent Spectral Libraries: Rather than predicting a single intensity value for each fragment ion, Altimeter predicts 4 B-spline coefficients. Evaluating the fragment splines at a given collision energy gives a fragment ion intensity. Pioneer calibrates the library to find the optimal collision energy value to use for each MS data file in an experiment. In this way, it is possible to use a single spectral library for different instruments and scan settings. \nFragment Isotope Correction: Fragment isotope distributions depend on precursor isotope distributions as distorted by quadrupole mass filtering. Altimeter addresses this by predicting total fragment ion intensities rather than monoisotopic ones. Pioneer then accurately re-isotopes these library spectra using methods from Goldfarb et al.. This is particularly important for narrow-window DIA methods where precursor isotopic envelopes frequently straddle multiple windows.\nQaudrupole Transmission Modeling: For narrow-window data, Pioneer can optionally estimate a quadrupole-transmission efficiency function for more accurate re-isotoping. \nIntensity-Aware Fragment Index Search: Pioneer implements a fast fragment index search inspired by MSFragger and Sage. Pioneer's implementation uniquely leverages accurate fragment intensity predictions from in silico libraries to improve both speed and specificity of the search.\nLinear Regression onto Library Templates: Pioneer explains each observed mass spectrum as a linear combination of template spectra from the library. To reduce quantitative bias from interfering signals, Pioneer minimizes the pseudo-Huber loss rather than squared error. This provides robust quantification even in complex spectra. For other examples of linear regression applied to DIA analyses, see Specter and Chimerys.\nScalability: Pioneer was designed to scale to large experiments with many MS data files. Memory consumption remains constant as the number of data files in an experiment grows large. ","category":"page"},{"location":"#Quick-Links","page":"Home","title":"Quick Links","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Installation Guide\nQuick Start Tutorial","category":"page"},{"location":"#Authors-and-Development","page":"Home","title":"Authors and Development","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pioneer is developed and maintained by:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Nathan Wamsley (Major Lab/Goldfarb Lab, Washington University)\nDennis Goldfarb (Goldfarb Lab, Washington University)","category":"page"},{"location":"#Contact","page":"Home","title":"Contact","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"For questions about Pioneer or to collaborate, please contact:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Nathan Wamsley (wamsleynathan@gmail.com)\nDennis Goldfarb (dennis.goldfarb@wustl.edu)","category":"page"},{"location":"","page":"Home","title":"Home","text":"For toubleshooting use the Issues page on github. To critique methods or propose features use the Discussions page.","category":"page"},{"location":"#Exported-Methods","page":"Home","title":"Exported Methods","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Pioneer.SearchDIA","page":"Home","title":"Pioneer.SearchDIA","text":"SearchDIA(params_path::String)\n\nMain entry point for the DIA (Data-Independent Acquisition) search workflow. Executes a series of SearchMethods and generates performance metrics.\n\nParameters:\n\nparams_path: Path to JSON configuration file containing search parameters\n\nOutput:\n\nGenerates a log file in the results directory\nLong and wide-formatted tables (.arrow and .csv) for protein-group and precursor level id's and quantitation.\nReports timing and memory usage statistics\n\nExample:\n\njulia> SearchDIA(\"/path/to/config.json\")\n==========================================================================================\nSarting SearchDIA\n==========================================================================================\n\nStarting search at: 2024-12-30T14:01:01.510\nOutput directory: ./../data/ecoli_test/ecoli_test_results\n[ Info: Loading Parameters...\n[ Info: Loading Spectral Library...\n .\n .\n .\n\nIf it does not already exist, SearchDIA creates the user-specified results_dir and generates quality control plots, data tables, and logs.\n\nresults_dir/\n├── pioneer_search_log.txt\n├── qc_plots/\n│   ├── collision_energy_alignment/\n│   │   └── nce_alignment_plots.pdf\n│   ├── quad_transmission_model/\n│   │   ├── quad_data\n│   │   │   └── quad_data_plots.pdf\n│   │   └── quad_models\n│   │       └── quad_model_plots.pdf\n│   ├── rt_alignment_plots/\n│   │   └── rt_alignment_plots.pdf\n│   ├── mass_error_plots/\n│   │   └── mass_error_plots.pdf\n│   └── QC_PLOTS.pdf\n├── precursors_long.arrow\n├── precursors_long.tsv\n├── precursors_wide.arrow\n├── precurosrs_wide.tsv\n├── protein_groups_long.arrow\n├── protein_groups_long.tsv\n├── protein_groups_wide.arrow\n└── protein_groups_wide.tsv\n\n\n\n\n\n","category":"function"},{"location":"#Pioneer.GetSearchParams","page":"Home","title":"Pioneer.GetSearchParams","text":"getSearchParams(template_path::String, lib_path::String, ms_data_path::String, results_path::String)\n\nCreates a new search parameter file based on a template, with updated file paths.\n\nThe function reads a template JSON configuration file and creates a new 'search_parameters.json'  in the current working directory with updated paths while preserving all other settings.\n\nArguments:\n\nlib_path: Path to the library file (.poin)\nmsdatapath: Path to the MS data directory\nresults_path: Path where results will be stored\nparamspath: Path to folder or .json file in which to write the template parameters file. Defaults to joinpath(pwd(), \"./searchparameters.json\")\n\nReturns:\n\nString: Path to the newly created search parameters file\n\nExample:\n\noutput_path = getSearchParams(\n    \"/path/to/speclib.poin\",\n    \"/path/to/ms/data/dir\",\n    \"/path/to/output/dir\"\n)\n\n\n\n\n\n","category":"function"},{"location":"#Pioneer.BuildSpecLib","page":"Home","title":"Pioneer.BuildSpecLib","text":"BuildSpecLib(params_path::String)\n\nMain function to build a spectral library from parameters. Executes a series of steps:\n\nParameter validation and directory setup\nFragment bound detection\nRetention time prediction (optional)\nFragment prediction (optional)\nLibrary index building\n\nParameters:\n\nparams_path: Path to JSON configuration file containing library building parameters\n\nOutput:\n\nGenerates a spectral library in the specified output directory\nCreates a detailed log file with timing and performance metrics\nReturns nothing\n\n\n\n\n\n","category":"function"},{"location":"#Pioneer.GetBuildLibParams","page":"Home","title":"Pioneer.GetBuildLibParams","text":"GetBuildLibParams(out_dir::String, lib_name::String, fasta_inputs)\n\nCreates a new library build parameter file with updated paths and automatically discovered FASTA files. Uses a default template from assets/example_config/.\n\nArguments:\n\nout_dir: Output directory path\nlib_name: Library name path\nfasta_inputs: Can be:\nA single directory path (String) to search for FASTA files\nA single FASTA file path (String)\nAn array of directories and/or FASTA file paths\nparamspath: Path to folder or .json file in which to write the template parameters file. Defaults to joinpath(pwd(), \"./buildspeclibparams.json\")\nregex_codes: Optional. Can be:\nA single set of regex codes (applied to all FASTA files)\nMultiple sets matching the number of fasta_inputs for positional mapping\nDefault: uses the regex patterns from the template\nsimplified: If true, use the simplified template (default: true)\n\nReturns:\n\nString: Path to the newly created parameters file\n\n\n\n\n\n","category":"function"},{"location":"#Pioneer.convertMzML","page":"Home","title":"Pioneer.convertMzML","text":"convertMzML(mzml_dir::String; skip_scan_header::Bool=true)\n\nConvert mzML mass spectrometry data files to Arrow IPC format.\n\nTakes either a directory containing mzML files or a path to a single mzML file and converts them to  Arrow format, preserving scan data including m/z arrays, intensity arrays, and scan metadata.\n\nArguments\n\nmzml_dir::String: Path to either a directory containing mzML files or a path to a single mzML file\nskip_scan_header::Bool=true: When true, omits scan header information from the output to reduce file size\n\nReturns\n\nnothing\n\nOutput\n\nCreates Arrow (.arrow) files in the same directory as the input mzML files and with the same base filename.\n\nExamples\n\n# Convert all mzML files in a directory\nconvertMzML(\"path/to/mzml/files\")\n\n# Convert a single mzML file\nconvertMzML(\"path/to/single/file.mzML\")\n\n# Include scan headers in output\nconvertMzML(\"path/to/mzml/files\", skip_scan_header=false)\n\nNotes\n\nEach mzML file is converted to a corresponding Arrow IPC (.arrow) file in the same directory. This is particularly useful for Sciex data where direct .wiff/.wiff2 conversion is not supported\n\n\n\n\n\n","category":"function"}]
}
