# .github/actions/publish-release/action.yml
name: "Publish GitHub Release"
description: "Create or update a GitHub Release and upload all artifacts."
inputs:
  version:
    description: "The release tag/version to publish (e.g., v1.2.3)"
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create or ensure notes exist
      shell: bash
      run: |
        set -euo pipefail
        : "${GITHUB_TOKEN:?GITHUB_TOKEN is required}"
        export GH_TOKEN="$GITHUB_TOKEN"

        ver="${{ inputs.version }}"

        if gh release view "$ver" >/dev/null 2>&1; then
          # If body is empty, (re)generate notes and update
          body_len=$(gh release view "$ver" --json body --jq '.body | length')
          if [ "$body_len" -eq 0 ]; then
            name=$(gh api -X POST repos/:owner/:repo/releases/generate-notes \
              -f tag_name="$ver" --jq .name)
            body=$(gh api -X POST repos/:owner/:repo/releases/generate-notes \
              -f tag_name="$ver" --jq .body)
            gh release edit "$ver" -t "$name" -n "$body"
          fi
        else
          # Create with auto-generated notes (donâ€™t pass --title so GH can auto-title)
          gh release create "$ver" --generate-notes
        fi

    - name: Upload all assets
      shell: bash
      run: |
        set -euo pipefail
        export GH_TOKEN="$GITHUB_TOKEN"

        shopt -s nullglob
        files=(artifacts/**/*)
        if [ ${#files[@]} -eq 0 ]; then
          echo "No artifacts to upload; skipping."
          exit 0
        fi

        for file in "${files[@]}"; do
          gh release upload "${{ inputs.version }}" "$file" --clobber
        done
